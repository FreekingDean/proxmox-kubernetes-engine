syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/resource.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/field_mask.proto";

package proxmox_kubernetes_engine.v1;

option java_multiple_files = true;
option java_package = "com.proxmox_kubernetes_engine.v1";
option java_outer_classname = "MachinesProto";
option go_package = "github.com/FreekingDean/proxmox-kubernetes-engine/gen/go/proxmox_kubernetes_engine/v1";

service MachineService {
  rpc GetMachine(GetMachineRequest) returns (Machine) {
    option (google.api.http) = {
      get: "/v1/{name=nodePools/*/machines/*}"
    };
    option (google.api.method_signature) = "name";
  }
  rpc ListMachines(ListMachinesRequest) returns (ListMachinesResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=nodePools/*}/machines"
    };
    option (google.api.method_signature) = "parent";
  }
}

message GetMachineRequest {
  string name = 1 [
  (google.api.field_behavior) = REQUIRED,
  (google.api.resource_reference) = {
    type: "proxmox-kubernetes-engine.io/Machine"
  }];
}

message ListMachinesRequest {
  string parent = 1 [
  (google.api.field_behavior) = REQUIRED,
  (google.api.resource_reference) = {
    type: "proxmox-kubernetes-engine.io/NodePool"
  }];
  int32 page_size = 2 [ (google.api.field_behavior) = OPTIONAL ];
  string page_token = 3 [ (google.api.field_behavior) = OPTIONAL ];
}

message ListMachinesResponse {
  repeated Machine machines = 1;
  string next_page_token = 2;
}

message Machine {
  option (google.api.resource) = {
    type: "proxomx-kubernetes-engine.io/Machine"
    pattern: "nodePools/{node_pool}/machines/{machine}"
    singular: "machine"
    plural: "machines"
  };
  string name = 1 [ 
  (google.api.field_behavior) = IDENTIFIER,
  (google.api.resource_reference) = {
    type: "proxmox-kubernetes-engine.io/Machine"
  }];
  string image = 2 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  int32 memory = 3 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  int32 cpus = 4 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  State state = 5 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  string group = 6 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  string currentNode = 7 [ (google.api.field_behavior) = OUTPUT_ONLY ];
}

enum State {
  UNKNOWN = 0;
  STARTING = 1;
  RUNNING = 2;
  STOPPING = 3;
  STOPPED = 4;
  ERROR = 5;
  CREATING = 6;
  CREATED = 7;
  DESTROYING = 8;
  DESTROYED = 9;
}
