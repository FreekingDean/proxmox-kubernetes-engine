syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/resource.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/field_mask.proto";

package proxmox_kubernetes_engine.v1;

option java_multiple_files = true;
option java_package = "com.proxmox_kubernetes_engine.v1";
option java_outer_classname = "NodePoolAssignmentsProto";
option go_package = "github.com/FreekingDean/proxmox-kubernetes-engine/gen/go/proxmox_kubernetes_engine/v1";

service NodePoolAssignmentService {
    rpc GetNodePoolAssignment(GetNodePoolAssignmentRequest) returns (NodePoolAssignment) {
    option (google.api.http) = {
      get: "/v1/{name=clusters/*/nodePoolAssignments/*}"
    };
    option (google.api.method_signature) = "name";
  }
    rpc ListNodePoolAssignments(ListNodePoolAssignmentsRequest) returns (ListNodePoolAssignmentsResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=clusters/*}/nodePoolAssignments"
    };
    option (google.api.method_signature) = "parent";
  }
    rpc CreateNodePoolAssignment(CreateNodePoolAssignmentRequest) returns(NodePoolAssignment) {
    option (google.api.http) = {
      post: "/v1/{parent=clusters/*}/nodePoolAssignments"
      body: "node_pool_assignment"
    };
    option (google.api.method_signature) = "parent,node_pool_assignment,node_pool_assignment_id";
  }
    rpc UpdateNodePoolAssignment(UpdateNodePoolAssignmentRequest) returns(NodePoolAssignment) {
    option (google.api.http) = {
      patch: "/v1/{node_pool_assignment.name=clusters/*/nodePoolAssignments/*}"
      body: "node_pool_assignment"
    };
    option (google.api.method_signature) = "node_pool_assignment,update_mask";
  }
    rpc DeleteNodePoolAssignment(DeleteNodePoolAssignmentRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/{name=clusters/*/nodePoolAssignments/*}"
    };
    option (google.api.method_signature) = "name";
  }
}

message GetNodePoolAssignmentRequest {
  string name = 1 [
  (google.api.field_behavior) = REQUIRED,
  (google.api.resource_reference) = {
    type: "proxmox-kubernetes-engine.io/NodePoolAssignment"
  }];
}

message ListNodePoolAssignmentsRequest {
  string parent = 1 [
  (google.api.field_behavior) = REQUIRED,
  (google.api.resource_reference) = {
    type: "proxmox-kubernetes-engine.io/Cluster"
  }];
  int32 page_size = 2 [ (google.api.field_behavior) = OPTIONAL ];
  string page_token = 3 [ (google.api.field_behavior) = OPTIONAL ];
}

message ListNodePoolAssignmentsResponse {
  repeated NodePoolAssignment node_pool_assignments = 1;
  string next_page_token = 2;
}

message CreateNodePoolAssignmentRequest {
  string node_pool_assignment_id = 1 [ (google.api.field_behavior) = REQUIRED ];
  string parent = 2 [
  (google.api.field_behavior) = REQUIRED,
  (google.api.resource_reference) = {
    type: "proxmox-kubernetes-engine.io/Cluster"
  }];
  NodePoolAssignment node_pool_assignment = 3 [ (google.api.field_behavior) = REQUIRED ];
}

message UpdateNodePoolAssignmentRequest {
  NodePoolAssignment node_pool_assignment = 1 [ (google.api.field_behavior) = REQUIRED ];
  google.protobuf.FieldMask update_mask = 2 [ (google.api.field_behavior) = REQUIRED ];
}

message DeleteNodePoolAssignmentRequest {
  string name = 1 [
  (google.api.field_behavior) = REQUIRED,
  (google.api.resource_reference) = {
    type: "proxmox-kubernetes-engine.io/NodePoolAssignment"
  }];
}

message NodePoolAssignment {
  option (google.api.resource) = {
    type: "proxomx-kubernetes-engine.io/NodePoolAssignment"
    pattern: "clusters/{cluster}/nodePoolAssignments/{node_pool_assignment}"
    singular: "nodePoolAssignment"
    plural: "nodePoolAssignments"
  };
  string name = 1 [
  (google.api.field_behavior) = IDENTIFIER,
  (google.api.resource_reference) = {
    type: "proxmox-kubernetes-engine.io/NodePoolAssignment"
  }];
  string node_pool = 2 [ (google.api.field_behavior) = REQUIRED ];
  string role = 3 [ (google.api.field_behavior) = REQUIRED ];
}
